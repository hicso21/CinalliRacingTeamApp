import type { Product } from "@/lib/types"

export const demoProducts: Product[] = [
  {
    id: "1",
    barcode: "7891234567890",
    name: "Aceite Motor Castrol GTX 5W-30",
    brand: "Castrol",
    category: "Aceites",
    price: 8500,
    cost: 6200,
    stock: 25,
    min_stock: 5,
    description: "Aceite sintético para motores de alta performance",
    supplier: "Distribuidora Automotriz SA",
    created_at: "2024-01-15T10:00:00Z",
    updated_at: "2024-01-15T10:00:00Z",
  },
  {
    id: "2",
    barcode: "7891234567891",
    name: "Filtro de Aceite Fram PH3593A",
    brand: "Fram",
    category: "Filtros",
    price: 1200,
    cost: 850,
    stock: 15,
    min_stock: 10,
    description: "Filtro de aceite para motores 1.6L",
    supplier: "Repuestos del Norte",
    created_at: "2024-01-15T10:00:00Z",
    updated_at: "2024-01-15T10:00:00Z",
  },
  {
    id: "3",
    barcode: "7891234567892",
    name: "Bujías NGK Iridium",
    brand: "NGK",
    category: "Bujías",
    price: 2800,
    cost: 2100,
    stock: 8,
    min_stock: 12,
    description: "Bujías de iridio de larga duración",
    supplier: "Importadora Japonesa",
    created_at: "2024-01-15T10:00:00Z",
    updated_at: "2024-01-15T10:00:00Z",
  },
  {
    id: "4",
    barcode: "7891234567893",
    name: "Aceite Transmisión Shell Spirax",
    brand: "Shell",
    category: "Aceites",
    price: 4500,
    cost: 3200,
    stock: 12,
    min_stock: 8,
    description: "Aceite para transmisión manual",
    supplier: "Distribuidora Shell",
    created_at: "2024-01-15T10:00:00Z",
    updated_at: "2024-01-15T10:00:00Z",
  },
  {
    id: "5",
    barcode: "7891234567894",
    name: "Filtro de Aire K&N 33-2304",
    brand: "K&N",
    category: "Filtros",
    price: 3200,
    cost: 2400,
    stock: 6,
    min_stock: 10,
    description: "Filtro de aire deportivo reutilizable",
    supplier: "Performance Parts",
    created_at: "2024-01-15T10:00:00Z",
    updated_at: "2024-01-15T10:00:00Z",
  },
]

export const demoStats = {
  totalProducts: demoProducts.length,
  totalValue: demoProducts.reduce((sum, p) => sum + p.price * p.stock, 0),
  lowStockCount: demoProducts.filter((p) => p.stock <= p.min_stock).length,
  categories: [...new Set(demoProducts.map((p) => p.category))],
}
